import React, { useState, useEffect } from "react";
import {
  Container,
  Box,
  Typography,
  Button,
  Grid,
  Paper,
  Tabs,
  Tab,
  FormControl,
  InputLabel,
  Select,
  MenuItem,
  TextField,
  Alert,
  Accordion,
  AccordionSummary,
  AccordionDetails,
  Chip,
} from "@mui/material";
import ExpandMoreIcon from "@mui/icons-material/ExpandMore";
import FileInput from "../components/Fileinput";
import ComparisonResult from "../components/ComparisonResult";
import * as Diff from "diff";
import axios from "axios";
import { findMatchingProcessor } from "../data/paymentProcessors";

function Filecomp() {
  const [file1Content, setFile1Content] = useState("");
  const [textOrFileContent, setTextOrFileContent] = useState("");
  const [file1Name, setFile1Name] = useState("");
  const [file2Name, setFile2Name] = useState("");
  const [comparisonResult, setComparisonResult] = useState(null);
  const [filesIdentical, setFilesIdentical] = useState(null);
  const [inputMode, setInputMode] = useState("existing-file");
  const [url, setUrl] = useState("");
  // const [fileContent, setFileContent] = useState("");
  const [inputMethod, setInputMethod] = useState("paste"); // Default to paste text
  const [fileVersion, setFileVersion] = useState("sandbox"); // Default to sandbox version
  const [alternativeMatch, setAlternativeMatch] = useState(null); // For storing alternative payment processor matches

  // Pre-existing file content for Sandbox, Live, and Braintree versions
  const sandboxFileContent =
    "";
  const liveFileContent =
    "";
  const braintreeFileContent =
    ""; // Use live PayPal content for now

  useEffect(() => {
    // Load the selected file version content when the component mounts or version changes
    if (fileVersion === "sandbox") {
      setFile1Content(sandboxFileContent);
    } else if (fileVersion === "live") {
      setFile1Content(liveFileContent);
    } else if (fileVersion === "braintree") {
      setFile1Content(braintreeFileContent);
    }
  }, [fileVersion, sandboxFileContent, liveFileContent, braintreeFileContent]);

  const handleUrlChange = (e) => {
    setUrl(e.target.value);
  };

  const fetchUrlContent = async () => {
    try {
      const response = await axios.get(
        `${url}/.well-known/apple-developer-merchantid-domain-association`
      );
      console.log("Fetched content from URL:", response.data);
      setTextOrFileContent(response.data);
      return response.data;
    } catch (error) {
      console.error("Failed to fetch content from URL:", error);
      return null;
    }
  };

  // const fetchUrlContent = async () => {
  //   const fullURL = `${url}/.well-known/apple-developer-merchantid-domain-association`; // Replace with your actual URL

  //   try {
  //     const response = await axios.get(
  //       `http://localhost:3333/fetch-url-content`,
  //       {
  //         params: { url: fullURL },
  //       }
  //     );
  //     console.log("Fetched content from server:", response.data);
  //     setTextOrFileContent(response.data);
  //   } catch (error) {
  //     console.error("Failed to fetch content from server:", error);
  //   }
  // };

  const handleTabChange = (event, newValue) => {
    setInputMode(newValue);
    // Clear alternative match when input mode changes
    setAlternativeMatch(null);
  };

  const handleInputMethodChange = (event) => {
    setInputMethod(event.target.value);
    // Clear alternative match when input method changes
    setAlternativeMatch(null);
  };

  const handleFileVersionChange = (event) => {
    setFileVersion(event.target.value);
    // Clear alternative match when version changes
    setAlternativeMatch(null);
  };

  const compareContent = () => {
    let diff;
    if (inputMode === "file-file") {
      diff = Diff.diffWords(file1Content, textOrFileContent);
    } else if (inputMode === "text-text") {
      diff = Diff.diffWords(file1Content, textOrFileContent);
    } else if (inputMode === "file-text") {
      diff = Diff.diffWords(file1Content, textOrFileContent);
    } else if (inputMode === "existing-file") {
      diff = Diff.diffWords(file1Content, textOrFileContent);
    }
    setComparisonResult(diff);

    const areContentsIdentical = diff.every(
      (part) => !part.added && !part.removed
    );
    setFilesIdentical(areContentsIdentical);

    // Only check alternative payment processors for live PayPal comparison
    if (
      inputMode === "existing-file" &&
      fileVersion === "live" &&
      !areContentsIdentical
    ) {
      const matchingProcessor = findMatchingProcessor(textOrFileContent);
      setAlternativeMatch(matchingProcessor);
    } else {
      setAlternativeMatch(null);
    }
  };

  return (
    <Container maxWidth="md">
      <Box my={4}>
        <Typography variant="h3" component="h1" gutterBottom align="center">
          Compare Tool
        </Typography>
        <Paper elevation={3} style={{ padding: "20px" }}>
          <Tabs
            value={inputMode}
            onChange={handleTabChange}
            variant="fullWidth">
            <Tab label="Compare with Existing File" value="existing-file" />
            <Tab label="File vs File" value="file-file" />
            <Tab label="Text vs Text" value="text-text" />
            <Tab label="File vs Text" value="file-text" />
          </Tabs>
          <Grid container spacing={3} mt={2}>
            {inputMode === "file-file" && (
              <>
                <Grid item xs={12} sm={6}>
                  <FileInput
                    setContent={setFile1Content}
                    label="File 1"
                    isTextInput={false}
                    setFileName={setFile1Name}
                    fileName={file1Name}
                  />
                </Grid>
                <Grid item xs={12} sm={6}>
                  <FileInput
                    setContent={setTextOrFileContent}
                    label="File 2"
                    isTextInput={false}
                    setFileName={setFile2Name}
                    fileName={file2Name}
                  />
                </Grid>
              </>
            )}
            {inputMode === "text-text" && (
              <>
                <Grid item xs={12} sm={6}>
                  <FileInput
                    setContent={setFile1Content}
                    label="Text 1"
                    isTextInput={true}
                  />
                </Grid>
                <Grid item xs={12} sm={6}>
                  <FileInput
                    setContent={setTextOrFileContent}
                    label="Text 2"
                    isTextInput={true}
                  />
                </Grid>
              </>
            )}
            {inputMode === "file-text" && (
              <>
                <Grid item xs={12} sm={6}>
                  <FileInput
                    setContent={setFile1Content}
                    label="File"
                    isTextInput={false}
                    setFileName={setFile1Name}
                    fileName={file1Name}
                  />
                </Grid>
                <Grid item xs={12} sm={6}>
                  <FileInput
                    setContent={setTextOrFileContent}
                    label="Text"
                    isTextInput={true}
                  />
                </Grid>
              </>
            )}
            {inputMode === "existing-file" && (
              <>
                <Grid item xs={12} sm={6}>
                  <FormControl fullWidth>
                    <InputLabel>File Version</InputLabel>
                    <Select
                      value={fileVersion}
                      onChange={handleFileVersionChange}
                      label="File Version">
                      <MenuItem value="sandbox">PayPal Sandbox</MenuItem>
                      <MenuItem value="live">PayPal Live</MenuItem>
                      <MenuItem value="braintree">Braintree Live</MenuItem>
                    </Select>
                  </FormControl>
                  <Typography variant="h6" mt={2}>
                    {fileVersion === "sandbox"
                      ? "PayPal Sandbox Apple Pay file"
                      : fileVersion === "live"
                      ? "PayPal Live Apple Pay file"
                      : "Braintree Live Apple Pay file"}
                  </Typography>
                </Grid>
                <Grid item xs={12} sm={6}>
                  <FormControl fullWidth>
                    <InputLabel>Input Method</InputLabel>
                    <Select
                      value={inputMethod}
                      onChange={handleInputMethodChange}
                      label="Input Method">
                      <MenuItem value="paste">Paste Text</MenuItem>
                      <MenuItem value="upload">Upload File</MenuItem>
                      <MenuItem value="url">Fetch from URL</MenuItem>
                    </Select>
                  </FormControl>
                  <Box mt={2}>
                    {inputMethod === "paste" ? (
                      <FileInput
                        setContent={setTextOrFileContent}
                        label="Paste Text to Compare"
                        isTextInput={true}
                      />
                    ) : inputMethod === "upload" ? (
                      <FileInput
                        setContent={setTextOrFileContent}
                        label="Upload File to Compare"
                        isTextInput={false}
                        setFileName={setFile2Name}
                        fileName={file2Name}
                      />
                    ) : (
                      <Box>
                        <TextField
                          fullWidth
                          label="Enter URL"
                          value={url}
                          onChange={handleUrlChange}
                        />
                        <Button
                          variant="contained"
                          color="primary"
                          onClick={fetchUrlContent}
                          sx={{ mt: 2 }}>
                          Fetch
                        </Button>
                      </Box>
                    )}
                  </Box>
                </Grid>
              </>
            )}
          </Grid>
          <Box mt={3} textAlign="center">
            <Button
              variant="contained"
              color="primary"
              onClick={compareContent}
              disabled={!textOrFileContent}>
              Compare
            </Button>
            <Typography variant="h4" mt={2}>
              When fetching from URL it will fail please add this chrome
              extension to allow CORS.{" "}
              <a
                style={{ color: "blue" }}
                target="_blank"
                href="https://chromewebstore.google.com/detail/allow-cors-access-control/lhobafahddgcelffkeicbaginigeejlf?hl=en"
                rel="noreferrer">
                CORS extension
              </a>
            </Typography>
          </Box>
        </Paper>
        {filesIdentical !== null && (
          <Box mt={4}>
            <Paper
              elevation={2}
              sx={{
                p: 3,
                backgroundColor: filesIdentical ? "#f1f8e9" : "#fff3e0",
              }}>
              {/* Main Result Header */}
              <Box textAlign="center" mb={3}>
                <Typography variant="h4" gutterBottom>
                  Comparison Result
                </Typography>

                {/* File Labels */}
                <Box
                  display="flex"
                  justifyContent="space-between"
                  alignItems="center"
                  mb={3}
                  sx={{ maxWidth: 600, mx: "auto" }}>
                  <Box textAlign="center" flex={1}>
                    <Chip
                      label={`${
                        fileVersion === "sandbox"
                          ? "PayPal Sandbox"
                          : fileVersion === "live"
                          ? "PayPal Live"
                          : "Braintree Live"
                      } File`}
                      color="primary"
                      variant="outlined"
                      sx={{ mb: 1 }}
                    />
                    <Typography variant="body2" color="text.secondary">
                      Reference File
                    </Typography>
                  </Box>

                  <Typography variant="h6" color="text.secondary" mx={2}>
                    vs
                  </Typography>

                  <Box textAlign="center" flex={1}>
                    <Chip
                      label="Your File"
                      color="secondary"
                      variant="outlined"
                      sx={{ mb: 1 }}
                    />
                    <Typography variant="body2" color="text.secondary">
                      {inputMethod === "paste"
                        ? "Pasted Content"
                        : inputMethod === "upload"
                        ? "Uploaded File"
                        : "Fetched from URL"}
                    </Typography>
                  </Box>
                </Box>

                {/* Match Result */}
                <Box
                  sx={{
                    p: 2,
                    borderRadius: 2,
                    backgroundColor: filesIdentical ? "#4caf50" : "#ff9800",
                    color: "white",
                    mb: 2,
                  }}>
                  <Typography variant="h5" fontWeight="bold">
                    {filesIdentical ? "✓ FILES MATCH" : "✗ FILES DO NOT MATCH"}
                  </Typography>
                  <Typography variant="body1" mt={1}>
                    {filesIdentical
                      ? `Your file is identical to ${
                          fileVersion === "sandbox"
                            ? "PayPal's sandbox"
                            : fileVersion === "live"
                            ? "PayPal's live"
                            : "Braintree's live"
                        } domain association file`
                      : `Your file differs from ${
                          fileVersion === "sandbox"
                            ? "PayPal's sandbox"
                            : fileVersion === "live"
                            ? "PayPal's live"
                            : "Braintree's live"
                        } domain association file`}
                  </Typography>
                </Box>
              </Box>

              {/* Alternative Payment Processor Match */}
              {inputMode === "existing-file" &&
                fileVersion === "live" &&
                !filesIdentical && (
                  <Box mb={3}>
                    {alternativeMatch ? (
                      <Alert severity="info" sx={{ maxWidth: 600, mx: "auto" }}>
                        <Typography variant="body1">
                          <strong>Alternative Match Found:</strong> Your file
                          appears to match <strong>{alternativeMatch}</strong>'s
                          domain association file.
                        </Typography>
                      </Alert>
                    ) : (
                      <Alert
                        severity="warning"
                        sx={{ maxWidth: 600, mx: "auto" }}>
                        <Typography variant="body1">
                          <strong>No Alternative Match:</strong> Your file
                          doesn't match any known payment processor's domain
                          association file in our database.
                        </Typography>
                      </Alert>
                    )}
                  </Box>
                )}

              {/* Detailed Comparison (Collapsible) */}
              {!filesIdentical && comparisonResult && (
                <Box sx={{ maxWidth: 800, mx: "auto" }}>
                  <Accordion>
                    <AccordionSummary
                      expandIcon={<ExpandMoreIcon />}
                      aria-controls="detailed-comparison-content"
                      id="detailed-comparison-header">
                      <Typography variant="h6">
                        View Detailed Differences
                      </Typography>
                    </AccordionSummary>
                    <AccordionDetails>
                      <Typography variant="body2" color="text.secondary" mb={2}>
                        Green text shows additions in your file, red text shows
                        what's missing compared to PayPal's file.
                      </Typography>
                      <ComparisonResult result={comparisonResult} />
                    </AccordionDetails>
                  </Accordion>
                </Box>
              )}
            </Paper>
          </Box>
        )}

        {/* Remove the old comparison result display */}
        {comparisonResult && filesIdentical && (
          <Box mt={2} textAlign="center">
            <Typography variant="body2" color="text.secondary">
              Files are identical - no differences to display
            </Typography>
          </Box>
        )}
      </Box>
    </Container>
  );
}

export default Filecomp;
